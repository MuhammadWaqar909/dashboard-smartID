{"version":3,"sources":["views/customers/Customers.js"],"names":["fields","name","selector","row","email","type","Customers","React","Component","constructor","props","super","token","localStorage","getItem","User","JSON","parse","Authorization","loggedIn","this","state","auth","filterValue","user","pending","datatable","componentDidMount","fetch","process","headers","then","res","json","result","setState","render","to","is_admin","console","log","className","variant","href","active","htmlFor","id","placeholder","onChange","item","target","value","columns","data","filter","index","toLowerCase","includes","selectableRows","direction","fixedHeaderScrollHeight","highlightOnHover","pagination","pointerOnHover","responsive","selectableRowsHighlight","selectableRowsNoSelectAll","selectableRowsRadio","striped","progressPending"],"mappings":"gLAAA,sEAkBA,MAAMA,EAAS,CACb,CAAEC,KAAM,OAAQC,SAAWC,GAAQA,EAAIF,MACvC,CAAEA,KAAM,QAASC,SAAWC,GAAQA,EAAIC,OACxC,CAAEH,KAAM,OAAQC,SAAWC,GAAQA,EAAIE,OAGzC,MAAMC,UAAkBC,IAAMC,UAC5BC,YAAYC,GACVC,MAAMD,GACN,MAAME,EAAQC,aAAaC,QAAQ,SAC7BC,EAAOC,KAAKC,MAAMJ,aAAaC,QAAQ,SAC7C,IAAII,EAAgBN,EAChBO,GAAW,EAEM,MAAjBD,IACFC,GAAW,GAGbC,KAAKC,MAAQ,CACXC,KAAMJ,EACNK,YAAa,GACbC,KAAMT,EACNU,SAAS,EACTC,UAAW,IAIfC,oBACEC,MAAMC,oDAAiD,CACrDC,QAAS,CAAEZ,cAAeE,KAAKC,MAAMC,QAEpCS,MAAMC,GAAQA,EAAIC,SAClBF,MAAMG,IACLd,KAAKe,SAAS,CACZV,SAAS,EACTC,UAAWQ,OAInBE,SACE,GAAwB,OAApBhB,KAAKC,MAAMG,KACb,OAAO,cAAC,IAAD,CAAUa,GAAG,WAEtB,IAAKjB,KAAKC,MAAMG,KAAKc,SACnB,OAAO,cAAC,IAAD,CAAUD,GAAG,eAEtB,MAAM,UAAEX,GAAcN,KAAKC,MAE3B,OADAkB,QAAQC,IAAId,GAEV,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,sBAAMe,UAAU,wBAAhB,uBACA,cAAC,IAAD,CAAMC,QAAQ,QAAQD,UAAU,wCAAhC,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUE,KAAK,kBAAkBC,QAAM,EAAvC,iCAMN,eAAC,IAAD,WACE,gCACE,uBAAOC,QAAQ,SAAf,SACE,8CAEF,uBACA,uBACEC,GAAG,SACHzC,KAAK,OACL0C,YAAY,eACZC,SAAWC,IACTV,QAAQC,IAAIS,EAAKC,OAAOC,OACjB/B,KAAKe,SAAS,CAAEZ,YAAa0B,EAAKC,OAAOC,cAItD,cAAC,IAAD,CACEC,QAASpD,EACTqD,KAAM3B,EAAU4B,QACd,CAACL,EAAMM,KAAP,iBACGN,EAAKhD,OAAL,UACCgD,EAAKhD,YADN,aACC,EAAWuD,cAAcC,SAASrC,KAAKC,MAAME,YAAYiC,iBAC1DP,EAAK7C,QAAL,UACC6C,EAAK7C,aADN,aACC,EAAYoD,cAAcC,SAASrC,KAAKC,MAAME,YAAYiC,iBAC3DP,EAAK5C,OAAL,UACC4C,EAAK5C,YADN,aACC,EAAWmD,cAAcC,SAASrC,KAAKC,MAAME,YAAYiC,mBAE/DE,gBAAc,EACdC,UAAU,OACVC,wBAAwB,QACxBC,kBAAgB,EAChBC,YAAU,EACVC,gBAAc,EACdC,YAAU,EACVC,yBAAuB,EACvBC,2BAAyB,EACzBC,oBAAoB,WACpBC,SAAO,EACPC,gBAAiBjD,KAAKC,MAAMI,uBA2B/BnB","file":"static/js/13.8c3db291.chunk.js","sourcesContent":["import React from 'react'\n// import customerData from './CustomersData'\nimport { Redirect } from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\n// import DataTable from '../../DataTable'\nimport {\n  // CDataTable,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CNav,\n  CNavItem,\n  CNavLink,\n  // CTable,\n} from '@coreui/react'\n\nconst fields = [\n  { name: 'Name', selector: (row) => row.name },\n  { name: 'Email', selector: (row) => row.email },\n  { name: 'Type', selector: (row) => row.type },\n]\n\nclass Customers extends React.Component {\n  constructor(props) {\n    super(props)\n    const token = localStorage.getItem('token')\n    const User = JSON.parse(localStorage.getItem('user'))\n    let Authorization = token\n    let loggedIn = true\n\n    if (Authorization == null) {\n      loggedIn = false\n    }\n\n    this.state = {\n      auth: Authorization,\n      filterValue: '',\n      user: User,\n      pending: true,\n      datatable: [],\n    }\n  }\n\n  componentDidMount() {\n    fetch(process.env.REACT_APP_API_URL + 'api/customers', {\n      headers: { Authorization: this.state.auth },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        this.setState({\n          pending: false,\n          datatable: result,\n        })\n      })\n  }\n  render() {\n    if (this.state.user === null) {\n      return <Redirect to=\"/login\" />\n    }\n    if (!this.state.user.is_admin) {\n      return <Redirect to=\"/dashboard\" />\n    }\n    const { datatable } = this.state\n    console.log(datatable)\n    return (\n      <>\n        <CRow>\n          <CCol>\n            <CCard>\n              <CCardHeader>\n                <span className=\"justify-content-start\">Customers</span>\n                <CNav variant=\"pills\" className=\"card-header-pills justify-content-end\">\n                  <CNavItem>\n                    <CNavLink href=\"#/customers/add\" active>\n                      Add Customer\n                    </CNavLink>\n                  </CNavItem>\n                </CNav>\n              </CCardHeader>\n              <CCardBody>\n                <div>\n                  <label htmlFor=\"Search\">\n                    <strong>Search</strong>\n                  </label>\n                  <br />\n                  <input\n                    id=\"Search\"\n                    type=\"text\"\n                    placeholder=\"Enter Filter\"\n                    onChange={(item) => {\n                      console.log(item.target.value)\n                      return this.setState({ filterValue: item.target.value })\n                    }}\n                  />\n                </div>\n                <DataTable\n                  columns={fields}\n                  data={datatable.filter(\n                    (item, index) =>\n                      (item.name &&\n                        item.name?.toLowerCase().includes(this.state.filterValue.toLowerCase())) ||\n                      (item.email &&\n                        item.email?.toLowerCase().includes(this.state.filterValue.toLowerCase())) ||\n                      (item.type &&\n                        item.type?.toLowerCase().includes(this.state.filterValue.toLowerCase())),\n                  )}\n                  selectableRows\n                  direction=\"auto\"\n                  fixedHeaderScrollHeight=\"300px\"\n                  highlightOnHover\n                  pagination\n                  pointerOnHover\n                  responsive\n                  selectableRowsHighlight\n                  selectableRowsNoSelectAll\n                  selectableRowsRadio=\"checkbox\"\n                  striped\n                  progressPending={this.state.pending}\n                  // subHeader\n                  // subHeaderAlign=\"left\"\n                />\n              </CCardBody>\n              {/* <CCardBody>\n                <CTable\n                  items={datatable}\n                  fields={fields}\n                  columnFilter\n                  tableFilter\n                  hover\n                  striped\n                  bordered\n                  size=\"md\"\n                  itemsPerPage={10}\n                  pagination\n                />\n              </CCardBody> */}\n            </CCard>\n          </CCol>\n        </CRow>\n      </>\n    )\n  }\n}\n\nexport default Customers\n"],"sourceRoot":""}