{"version":3,"sources":["views/dashboard/Dashboard.js"],"names":["fields","Dashboard","React","Component","constructor","props","super","token","localStorage","getItem","User","JSON","parse","key","wrap","minWidth","name","selector","row","visitor_name","filterable","visitor_company","style","width","height","background","outline","border","cursor","onClick","this","toggle","visitor_card_pic","src","process","alt","visitor_face_pic","visiting_to","visit_purpose","time_in","time_out","national_id","nationality","customer_id","toggleDetails","ocr_data","Authorization","loggedIn","state","auth","filterValue","user","datatable","pmodal","cmodal","pic_url","pending","details","setDetails","bind","closeDetails","closePictureModel","componentDidMount","fetch","headers","then","res","json","result","setState","pic","item","newDetails","Object","keys","map","console","log","render","to","id","htmlFor","type","placeholder","onChange","target","value","columns","data","filter","toLowerCase","includes","toString","selectableRows","direction","fixedHeaderScrollHeight","highlightOnHover","pagination","pointerOnHover","selectableRowsHighlight","selectableRowsNoSelectAll","selectableRowsRadio","striped","progressPending","responsive","subHeaderAlign","subHeaderWrap","visible","onClose","fluid","className","thumbnail","color","closeButton"],"mappings":"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","file":"static/js/15.b735f49e.chunk.js","sourcesContent":["import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\n\nimport {\n  // CTable,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CContainer,\n  CCol,\n  CRow,\n  CImage,\n  CButton,\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalFooter,\n} from '@coreui/react'\n// import { Button } from '@coreui/coreui'\n\nconst customStyle = { headCells: { style: { fontWeight: 600, fontSize: '14px' } } }\nlet fields\nconst subHeaderComponent = (\n  <div style={{ display: 'flex', alignItems: 'center' }}>\n    <input id=\"outlined-basic\" label=\"Search\" style={{ margin: '5px' }} />\n  </div>\n)\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props)\n    const token = localStorage.getItem('token')\n    const User = JSON.parse(localStorage.getItem('user'))\n\n    fields = [\n      {\n        key: 'visitor_name',\n        wrap: true,\n        minWidth: '120px',\n        name: 'Visitor Name',\n        selector: (row) => row.visitor_name,\n        filterable: true,\n      },\n      {\n        key: 'visitor_company',\n        wrap: true,\n        minWidth: '150px',\n        name: 'Visitor Company',\n        selector: (row) => row.visitor_company,\n        filterable: true,\n      },\n      {\n        key: 'visitor_card_pic',\n        name: 'Card',\n        wrap: true,\n\n        selector: (row) => (\n          <button\n            style={{\n              width: '100%',\n              height: '50px',\n              background: 'none',\n              outline: 'none',\n              border: 'none',\n              cursor: 'pointer',\n            }}\n            onClick={() => this.toggle(row.visitor_card_pic)}\n          >\n            <img\n              style={{ width: '100%', height: '100%' }}\n              src={`${process.env.REACT_APP_MEDIA_URL + row.visitor_card_pic}`}\n              alt=\"card/jpg\"\n            />\n          </button>\n        ),\n      },\n      {\n        key: 'visitor_face_pic',\n        name: 'Face',\n        wrap: true,\n\n        selector: (row) => (\n          <button\n            style={{\n              width: '100%',\n              height: '50px',\n              background: 'none',\n              outline: 'none',\n              border: 'none',\n              cursor: 'pointer',\n            }}\n            onClick={() => this.toggle(row.visitor_face_pic)}\n          >\n            <img\n              style={{ width: '100%', height: '100%' }}\n              src={`${process.env.REACT_APP_MEDIA_URL + row.visitor_face_pic}`}\n              alt=\"card/jpg\"\n            />\n          </button>\n        ),\n      },\n      {\n        key: 'visiting_to',\n        wrap: true,\n        name: 'Visit To',\n        selector: (row) => row.visiting_to,\n        filterable: true,\n      },\n\n      {\n        key: 'visit_purpose',\n        wrap: true,\n        name: 'Visitor Purpose',\n        minWidth: '140px',\n        selector: (row) => row.visit_purpose,\n        filterable: true,\n      },\n      {\n        key: 'time_in',\n        wrap: true,\n        name: 'Visit Date',\n        selector: (row) => row.time_in,\n        filterable: true,\n      },\n      {\n        key: 'time_out',\n        wrap: true,\n        name: 'Time Out',\n        selector: (row) => row.time_out,\n        filterable: true,\n      },\n      {\n        key: 'national_id',\n        minWidth: '140px',\n        wrap: true,\n        name: 'National ID',\n        selector: (row) => row.national_id,\n        filterable: true,\n      },\n      {\n        key: 'nationality',\n        wrap: true,\n        minWidth: '140px',\n        name: 'Nationality',\n        selector: (row) => row.nationality,\n        filterable: true,\n      },\n      {\n        key: 'user_id',\n        wrap: true,\n        name: 'Customer',\n        selector: (row) => row.customer_id,\n        filterable: true,\n      },\n      {\n        key: 'ocr_data',\n        name: 'Details',\n        wrap: true,\n\n        selector: (row) => (\n          <button\n            onClick={() => {\n              this.toggleDetails(row.ocr_data)\n              // console.log('Show Data Target....')\n            }}\n          >\n            Show Data\n          </button>\n        ),\n      },\n    ]\n\n    let Authorization = token\n    let loggedIn = true\n\n    if (Authorization == null) {\n      loggedIn = false\n    }\n\n    this.state = {\n      auth: Authorization,\n      filterValue: '',\n      user: User,\n      datatable: [],\n      pmodal: false,\n      cmodal: false,\n      pic_url: '',\n      pending: true,\n      details: [],\n      setDetails: '',\n    }\n\n    this.toggle = this.toggle.bind(this)\n    this.toggleDetails = this.toggleDetails.bind(this)\n    this.closeDetails = this.closeDetails.bind(this)\n    this.closePictureModel = this.closePictureModel.bind(this)\n  }\n\n  componentDidMount() {\n    if (this.state.auth != null) {\n      fetch(process.env.REACT_APP_API_URL + 'api/visitors/3', {\n        headers: { Authorization: this.state.auth },\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          this.setState({\n            pending: false,\n            datatable: result,\n          })\n        })\n    }\n  }\n  toggle(pic) {\n    this.setState({\n      pmodal: !this.state.pmodal,\n      pic_url: pic,\n    })\n  }\n\n  toggleDetails(item, index = '') {\n    let newDetails = JSON.parse(item)\n\n    this.setState({\n      cmodal: !this.state.cmodal,\n      setDetails: Object.keys(newDetails),\n      setDetails: Object.keys(newDetails).map((key) => `${key} = ${newDetails[key]}`),\n    })\n    console.log(this.state.setDetails)\n  }\n\n  closeDetails() {\n    this.setState({\n      cmodal: false,\n      details: '',\n    })\n  }\n  closePictureModel() {\n    this.setState({\n      pmodal: false,\n    })\n  }\n\n  render() {\n    if (this.state.auth === null) {\n      return <Redirect to=\"/login\" />\n    }\n    const { datatable } = this.state\n    console.log(datatable[0]?.id)\n    return (\n      <>\n        {/* <WidgetsDropdown /> */}\n        <CRow>\n          <CCol>\n            <CCard>\n              <CCardHeader>Visitors</CCardHeader>\n              <CCardBody>\n                <div>\n                  <label htmlFor=\"Search\">\n                    <strong>Search</strong>\n                  </label>\n                  <br />\n                  <input\n                    id=\"Search\"\n                    type=\"text\"\n                    placeholder=\"Enter Filter\"\n                    onChange={(item) => {\n                      console.log(item.target.value)\n                      return this.setState({ filterValue: item.target.value })\n                    }}\n                  />\n                </div>\n                <DataTable\n                  columns={fields}\n                  data={datatable.filter(\n                    (item) =>\n                      (item.visitor_name &&\n                        item.visitor_name\n                          .toLowerCase()\n                          .includes(this.state.filterValue.toLowerCase())) ||\n                      (item.visitor_company &&\n                        item.visitor_company\n                          .toLowerCase()\n                          .includes(this.state.filterValue.toLowerCase())) ||\n                      (item.id &&\n                        item.id\n                          .toString()\n                          .toLowerCase()\n                          .includes(this.state.filterValue.toString().toLowerCase())) ||\n                      (item.visit_purpose &&\n                        item.visit_purpose\n                          .toString()\n                          .toLowerCase()\n                          .includes(this.state.filterValue.toString().toLowerCase())),\n                  )}\n                  // data={datatable}\n                  selectableRows\n                  direction=\"auto\"\n                  fixedHeaderScrollHeight=\"300px\"\n                  highlightOnHover\n                  pagination\n                  pointerOnHover\n                  selectableRowsHighlight\n                  selectableRowsNoSelectAll\n                  selectableRowsRadio=\"checkbox\"\n                  striped\n                  progressPending={this.state.pending}\n                  // customStyles={customStyle}\n                  // subHeaderComponent={subHeaderComponent}\n                  responsive\n                  subHeaderAlign=\"right\"\n                  subHeaderWrap\n                />\n                {/* <CSmartTable\n                  items={datatable}\n                  fields={fields}\n                  columnfilter=\"true\"\n                  tablefilter=\"true\"\n                  hover\n                  striped\n                  bordered\n                  size=\"md\"\n                  itemsperpage={20}\n                  pagination=\"true\"\n                  scopedslots={{\n                    user_id: (item) => <td>{item.user.name}</td>,\n                    customer_id: (item) => <td>{item.user.name}</td>,\n                    visitor_face_pic: (item) => (\n                      <td>\n                        <CImage\n                          src={process.env.REACT_APP_MEDIA_URL + item.visitor_face_pic}\n                          fluid\n                          className=\"mb-2\"\n                          thumbnail\n                          onClick={() => this.toggle(item.visitor_face_pic)}\n                          width=\"75\"\n                          height=\"75\"\n                        />\n                      </td>\n                    ),\n                    visitor_card_pic: (item) => (\n                      <td>\n                        <CImage\n                          src={process.env.REACT_APP_MEDIA_URL + item.visitor_card_pic}\n                          fluid\n                          className=\"mb-2\"\n                          thumbnail\n                          onClick={() => this.toggle(item.visitor_card_pic)}\n                          width=\"75\"\n                          height=\"75\"\n                        />\n                      </td>\n                    ),\n                    ocr_data: (item, index) => {\n                      return (\n                        <td className=\"py-2\">\n                          <CButton\n                            color=\"primary\"\n                            variant=\"outline\"\n                            shape=\"square\"\n                            size=\"sm\"\n                            onClick={() => {\n                              this.toggleDetails(item, index)\n                            }}\n                          >\n                            Show Data\n                          </CButton>\n                        </td>\n                      )\n                    },\n                  }}\n                /> */}\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <CModal visible={this.state.pmodal} onClose={this.closePictureModel}>\n          <CModalHeader>Picture</CModalHeader>\n          <CModalBody>\n            <CImage\n              src={process.env.REACT_APP_MEDIA_URL + this.state.pic_url}\n              fluid\n              className=\"mb-2\"\n              thumbnail\n              width=\"480\"\n              height=\"200\"\n            />\n          </CModalBody>\n          <CModalFooter>\n            <CButton color=\"secondary\" onClick={this.toggle}>\n              Cancel\n            </CButton>\n          </CModalFooter>\n        </CModal>\n\n        <CModal visible={this.state.cmodal} onClose={this.closeDetails}>\n          <CModalHeader closeButton>Details</CModalHeader>\n          <CModalBody>\n            <CContainer>{this.state.setDetails}</CContainer>\n          </CModalBody>\n          <CModalFooter>\n            <CButton color=\"secondary\" onClick={this.closeDetails}>\n              Close\n            </CButton>\n          </CModalFooter>\n        </CModal>\n      </>\n    )\n  }\n}\n\nexport default Dashboard\n"],"sourceRoot":""}