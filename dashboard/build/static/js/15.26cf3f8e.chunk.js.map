{"version":3,"sources":["views/dashboard/Dashboard.js"],"names":["customStyle","headCells","style","fontWeight","fontSize","fields","Dashboard","React","Component","constructor","props","super","token","localStorage","getItem","User","JSON","parse","key","wrap","minWidth","name","selector","row","visitor_name","visitor_company","sorter","filter","width","height","background","outline","border","cursor","onClick","this","toggle","visitor_card_pic","src","process","alt","visitor_face_pic","visiting_to","visit_purpose","time_in","time_out","national_id","nationality","customer_id","toggleDetails","ocr_data","Authorization","loggedIn","state","auth","user","datatable","pmodal","cmodal","pic_url","pending","details","setDetails","bind","closeDetails","closePictureModel","componentDidMount","fetch","headers","then","res","json","result","setState","pic","item","newDetails","Object","keys","map","console","log","render","to","type","placeholder","columns","data","selectableRows","direction","fixedHeaderScrollHeight","highlightOnHover","pagination","pointerOnHover","responsive","selectableRowsHighlight","selectableRowsNoSelectAll","selectableRowsRadio","striped","subHeader","progressPending","subHeaderAlign","subHeaderWrap","customStyles","visible","onClose","fluid","className","thumbnail","color","closeButton"],"mappings":"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","file":"static/js/15.26cf3f8e.chunk.js","sourcesContent":["import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\n\nimport {\n  // CTable,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CContainer,\n  CCol,\n  CRow,\n  CImage,\n  CButton,\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalFooter,\n} from '@coreui/react'\n// import { Button } from '@coreui/coreui'\n\nconst customStyle = { headCells: { style: { fontWeight: 600, fontSize: '14px' } } }\nlet fields\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props)\n    const token = localStorage.getItem('token')\n    const User = JSON.parse(localStorage.getItem('user'))\n\n    fields = [\n      {\n        key: 'visitor_name',\n        wrap: true,\n        minWidth: '120px',\n        name: 'Visitor Name',\n        selector: (row) => row.visitor_name,\n      },\n      {\n        key: 'visitor_company',\n        wrap: true,\n        minWidth: '150px',\n        name: 'Visitor Company',\n        selector: (row) => row.visitor_company,\n      },\n      {\n        key: 'visitor_card_pic',\n        name: 'Card',\n        wrap: true,\n        sorter: false,\n        filter: false,\n        selector: (row) => (\n          <button\n            style={{\n              width: '100%',\n              height: '50px',\n              background: 'none',\n              outline: 'none',\n              border: 'none',\n              cursor: 'pointer',\n            }}\n            onClick={() => this.toggle(row.visitor_card_pic)}\n          >\n            <img\n              style={{ width: '100%', height: '100%' }}\n              src={`${process.env.REACT_APP_MEDIA_URL + row.visitor_card_pic}`}\n              alt=\"card/jpg\"\n            />\n          </button>\n        ),\n      },\n      {\n        key: 'visitor_face_pic',\n        name: 'Face',\n        wrap: true,\n        sorter: false,\n        filter: false,\n        selector: (row) => (\n          <button\n            style={{\n              width: '100%',\n              height: '50px',\n              background: 'none',\n              outline: 'none',\n              border: 'none',\n              cursor: 'pointer',\n            }}\n            onClick={() => this.toggle(row.visitor_face_pic)}\n          >\n            <img\n              style={{ width: '100%', height: '100%' }}\n              src={`${process.env.REACT_APP_MEDIA_URL + row.visitor_face_pic}`}\n              alt=\"card/jpg\"\n            />\n          </button>\n        ),\n      },\n      { key: 'visiting_to', wrap: true, name: 'Visit To', selector: (row) => row.visiting_to },\n\n      {\n        key: 'visit_purpose',\n        wrap: true,\n        name: 'Visitor Purpose',\n        minWidth: '140px',\n        selector: (row) => row.visit_purpose,\n      },\n      { key: 'time_in', wrap: true, name: 'Visit Date', selector: (row) => row.time_in },\n      { key: 'time_out', wrap: true, name: 'Time Out', selector: (row) => row.time_out },\n      {\n        key: 'national_id',\n        minWidth: '140px',\n        wrap: true,\n        name: 'National ID',\n        selector: (row) => row.national_id,\n      },\n      {\n        key: 'nationality',\n        wrap: true,\n        minWidth: '140px',\n        name: 'Nationality',\n        selector: (row) => row.nationality,\n      },\n      { key: 'user_id', wrap: true, name: 'Customer', selector: (row) => row.customer_id },\n      {\n        key: 'ocr_data',\n        name: 'Details',\n        wrap: true,\n        sorter: false,\n        filter: false,\n        selector: (row) => (\n          <button\n            onClick={() => {\n              this.toggleDetails(row.ocr_data)\n              // console.log('Show Data Target....')\n            }}\n          >\n            Show Data\n          </button>\n        ),\n      },\n    ]\n\n    let Authorization = token\n    let loggedIn = true\n\n    if (Authorization == null) {\n      loggedIn = false\n    }\n\n    this.state = {\n      auth: Authorization,\n      user: User,\n      datatable: [],\n      pmodal: false,\n      cmodal: false,\n      pic_url: '',\n      pending: true,\n      details: [],\n      setDetails: '',\n    }\n\n    this.toggle = this.toggle.bind(this)\n    this.toggleDetails = this.toggleDetails.bind(this)\n    this.closeDetails = this.closeDetails.bind(this)\n    this.closePictureModel = this.closePictureModel.bind(this)\n  }\n\n  componentDidMount() {\n    if (this.state.auth != null) {\n      fetch(process.env.REACT_APP_API_URL + 'api/visitors/3', {\n        headers: { Authorization: this.state.auth },\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          this.setState({\n            pending: false,\n            datatable: result,\n          })\n        })\n    }\n  }\n  toggle(pic) {\n    this.setState({\n      pmodal: !this.state.pmodal,\n      pic_url: pic,\n    })\n  }\n\n  toggleDetails(item, index = '') {\n    let newDetails = JSON.parse(item)\n\n    this.setState({\n      cmodal: !this.state.cmodal,\n\n      setDetails: Object.keys(newDetails),\n      setDetails: Object.keys(newDetails).map((key) => `${key} = ${newDetails[key]} , `),\n    })\n    console.log(this.state.setDetails)\n  }\n\n  closeDetails() {\n    this.setState({\n      cmodal: false,\n      details: '',\n    })\n  }\n  closePictureModel() {\n    this.setState({\n      pmodal: false,\n    })\n  }\n\n  render() {\n    if (this.state.auth === null) {\n      return <Redirect to=\"/login\" />\n    }\n    const { datatable } = this.state\n    return (\n      <>\n        {/* <WidgetsDropdown /> */}\n        <CRow>\n          <CCol>\n            <CCard>\n              <CCardHeader>Visitors</CCardHeader>\n              <CCardBody>\n                <div>\n                  <input type=\"text\" placeholder=\"Enter Filter\" />\n                </div>\n                <DataTable\n                  columns={fields}\n                  data={datatable}\n                  selectableRows\n                  direction=\"auto\"\n                  fixedHeaderScrollHeight=\"300px\"\n                  highlightOnHover\n                  pagination\n                  pointerOnHover\n                  responsive\n                  selectableRowsHighlight\n                  selectableRowsNoSelectAll\n                  selectableRowsRadio=\"checkbox\"\n                  striped\n                  subHeader\n                  progressPending={this.state.pending}\n                  subHeaderAlign=\"right\"\n                  subHeaderWrap\n                  customStyles={customStyle}\n                />\n                {/* <CSmartTable\n                  items={datatable}\n                  fields={fields}\n                  columnfilter=\"true\"\n                  tablefilter=\"true\"\n                  hover\n                  striped\n                  bordered\n                  size=\"md\"\n                  itemsperpage={20}\n                  pagination=\"true\"\n                  scopedslots={{\n                    user_id: (item) => <td>{item.user.name}</td>,\n                    customer_id: (item) => <td>{item.user.name}</td>,\n                    visitor_face_pic: (item) => (\n                      <td>\n                        <CImage\n                          src={process.env.REACT_APP_MEDIA_URL + item.visitor_face_pic}\n                          fluid\n                          className=\"mb-2\"\n                          thumbnail\n                          onClick={() => this.toggle(item.visitor_face_pic)}\n                          width=\"75\"\n                          height=\"75\"\n                        />\n                      </td>\n                    ),\n                    visitor_card_pic: (item) => (\n                      <td>\n                        <CImage\n                          src={process.env.REACT_APP_MEDIA_URL + item.visitor_card_pic}\n                          fluid\n                          className=\"mb-2\"\n                          thumbnail\n                          onClick={() => this.toggle(item.visitor_card_pic)}\n                          width=\"75\"\n                          height=\"75\"\n                        />\n                      </td>\n                    ),\n                    ocr_data: (item, index) => {\n                      return (\n                        <td className=\"py-2\">\n                          <CButton\n                            color=\"primary\"\n                            variant=\"outline\"\n                            shape=\"square\"\n                            size=\"sm\"\n                            onClick={() => {\n                              this.toggleDetails(item, index)\n                            }}\n                          >\n                            Show Data\n                          </CButton>\n                        </td>\n                      )\n                    },\n                  }}\n                /> */}\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <CModal visible={this.state.pmodal} onClose={this.closePictureModel}>\n          <CModalHeader>Picture</CModalHeader>\n          <CModalBody>\n            <CImage\n              src={process.env.REACT_APP_MEDIA_URL + this.state.pic_url}\n              fluid\n              className=\"mb-2\"\n              thumbnail\n              width=\"480\"\n              height=\"200\"\n            />\n          </CModalBody>\n          <CModalFooter>\n            <CButton color=\"secondary\" onClick={this.toggle}>\n              Cancel\n            </CButton>\n          </CModalFooter>\n        </CModal>\n\n        <CModal visible={this.state.cmodal} onClose={this.closeDetails}>\n          <CModalHeader closeButton>Details</CModalHeader>\n          <CModalBody>\n            <CContainer>{this.state.setDetails}</CContainer>\n          </CModalBody>\n          <CModalFooter>\n            <CButton color=\"secondary\" onClick={this.closeDetails}>\n              Close\n            </CButton>\n          </CModalFooter>\n        </CModal>\n      </>\n    )\n  }\n}\n\nexport default Dashboard\n"],"sourceRoot":""}